{
  "kind": "metagraf",
  "metadata": {
    "name": "person-svc-go",
    "labels": {
      "metagraf": "true"
    },
    "annotations": {
      "app": "person-svc-go"
    }
  },
  "spec": {
    "type": "service",
    "version": "1.0.0",
    "description": "A simple service for storing persons.",
    "repository": "git://github.com/laetho/person-svc-go.git",
    "image": "ghcr.io/laetho/person-svc-go:latest",
    "branch": "master",
    "dockerfile": "Dockerfile",
    "startupProbe": {},
    "livenessProbe": {},
    "readinessProbe": {},
    "environment": {
      "local": [
        {
          "name": "POSTGRESQL_USER",
          "required": true,
          "type": "string",
          "description": "Username for the database connection."
        },
        {
          "name": "POSTGRESQL_PASSWORD",
          "required": true,
          "type": "string",
          "secretfrom": "person-svc-go-pgdbpassword",
          "key": "password",
          "description": "Password to use for the database connection."
        },
        {
          "name": "PERSON_SVC_GO_DBV1_SERVICE_HOST",
          "required": false,
          "type": "string",
          "description": "A optional Kubernetes based service discovery variable."
        },
        {
          "name": "POSTGRESQL_PORT",
          "required": true,
          "type": "string",
          "description": "TCP Port of the database instance. Defaults to standard port.",
          "default": "5432"
        },
        {
          "name": "POSTGRESQL_SSL",
          "required": true,
          "type": "string",
          "description": "Disable or enable SSL mode for database connection.",
          "default": "disable"
        }
      ]
    },
    "resources": [
      {
        "name": "PERSON_SVC_GO_DBV1",
        "type": "clusterservice",
        "required": true,
        "external": false,
        "description": "We need a PostgreSQL Database in the cluster to operate. We implicitly expect the PERSON_SVC_GO_DB_SERVICE_HOST to be available. You can set it manually for local development."
      }
    ],
    "volume": [
      {
        "name": "kaniko-cache-person-svc-go",
	"description": "Persitent Volume used as a build cache",
	"mountpath" : "/workspace/cache",
	"accessmodes": [
		"ReadWriteOnce"
	],
	"capacity": [
	  {
            "storage": "5Gi"
	  }
	],
	"hostPath": {
	  "path": "/data/kaniko-cache-person-svc-go",
	  "type": ""
	}
      }
    ],
    "buildsecret": [
      {
        "name": "myregistrysecret",
        "description": "Kubernetes secret with a docker config.json.",
        "mountpath": "/kaniko/.docker",
        "items": [
          {
            "key": ".dockerconfigjson",
            "path": "config.json"
          }
        ]
      }
    ]
  }
}
